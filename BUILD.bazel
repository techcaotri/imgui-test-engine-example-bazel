load("@bazel_skylib//rules:run_binary.bzl", "run_binary")

# Platform configuration
config_setting(
    name = "linux",
    constraint_values = ["@platforms//os:linux"],
)

config_setting(
    name = "macos",
    constraint_values = ["@platforms//os:macos"],
)

config_setting(
    name = "windows",
    constraint_values = ["@platforms//os:windows"],
)

# Application logic library (WILL BE INSTRUMENTED FOR COVERAGE)
cc_library(
    name = "app_lib",
    srcs = ["app_logic.cpp"],
    hdrs = ["app_logic.h"],
    deps = [
        "@imgui//:imgui",
        "@imgui_test_engine//:test_engine",
        "@glfw//:glfw",
    ],
    copts = [
        "-std=c++17",
        "-DIMGUI_TEST_ENGINE_ENABLE_COROUTINE_STDTHREAD_IMPL=1",
    ],
    visibility = ["//visibility:public"],
)

# Main application binary
cc_binary(
    name = "imgui_test_app",
    srcs = ["main.cpp"],
    deps = [":app_lib"],
    linkopts = select({
        ":linux": ["-lGL", "-ldl"],
        ":macos": ["-framework", "OpenGL"],
        ":windows": ["-lopengl32"],
    }),
)

# Test targets - now use the library
cc_test(
    name = "imgui_test",
    srcs = ["main.cpp"],
    deps = [":app_lib"],
    args = [
        "--test",
        "--headless",
        "--report",
    ],
    linkopts = select({
        ":linux": ["-lGL", "-ldl"],
        ":macos": ["-framework", "OpenGL"],
        ":windows": ["-lopengl32"],
    }),
    env = {
        "DISPLAY": ":99",
    },
    size = "medium",
)

cc_test(
    name = "test_widgets",
    srcs = ["main.cpp"],
    deps = [":app_lib"],
    args = [
        "--test",
        "--headless",
        "--filter",
        "Widgets",
    ],
    linkopts = select({
        ":linux": ["-lGL", "-ldl"],
        ":macos": ["-framework", "OpenGL"],
        ":windows": ["-lopengl32"],
    }),
    env = {
        "DISPLAY": ":99",
    },
    size = "small",
)

cc_test(
    name = "test_integration",
    srcs = ["main.cpp"],
    deps = [":app_lib"],
    args = [
        "--test",
        "--headless",
        "--filter",
        "Integration",
    ],
    linkopts = select({
        ":linux": ["-lGL", "-ldl"],
        ":macos": ["-framework", "OpenGL"],
        ":windows": ["-lopengl32"],
    }),
    env = {
        "DISPLAY": ":99",
    },
    size = "medium",
)

cc_test(
    name = "test_performance",
    srcs = ["main.cpp"],
    deps = [":app_lib"],
    args = [
        "--test",
        "--headless",
        "--filter",
        "Performance",
    ],
    linkopts = select({
        ":linux": ["-lGL", "-ldl"],
        ":macos": ["-framework", "OpenGL"],
        ":windows": ["-lopengl32"],
    }),
    env = {
        "DISPLAY": ":99",
    },
    size = "large",
    timeout = "long",
)

# Test suite
test_suite(
    name = "all_tests",
    tests = [
        ":imgui_test",
        ":test_widgets",
        ":test_integration",
        ":test_performance",
    ],
)

# Simple test for coverage verification
cc_test(
    name = "simple_test",
    srcs = ["test_simple.cpp"],
    size = "small",
)
